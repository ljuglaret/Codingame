import System.IO
import Control.Monad
import  Data.List

main :: IO ()
main = do
    hSetBuffering stdout NoBuffering -- DO NOT REMOVE
    
    -- Auto-generated code below aims at helping you parse
    -- the standard input according to the problem statement.
    
    input_line <- getLine
    let n = read input_line :: Int
    
    -- hPutStrLn stderr "Debug messages..."
    
    -- Write answer to stdout
    putStrLn (versBaseTer n)
    return ()
    
versBaseTer :: Int -> String 
versBaseTer x = 
    if (x == 0) then "0"
    else
        let
            aux acc x0 = 
                if (x0 == 0)
                then concat (map(\elt -> if (elt == -1) then "T" else show elt) acc)
                else
                    if ((x0 `mod` 3 ) == 2)
                    then aux (((x0 `mod` 3 )-3):acc)  ((x0 +1 ) `div` 3)
                    else aux (((x0 `mod` 3 )):acc)  (x0 `div` 3)
                    
        in aux [] x
