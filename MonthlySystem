import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class MoisBase {
   static List<Integer> ent = Arrays.asList(0,1,2,3,4,5,6,7,8,9,10,11);
   static List<String> mois = Arrays.asList("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");



    public static ArrayList<ArrayList<Integer>> matRect(ArrayList<ArrayList<Integer>> l){
        ArrayList<ArrayList<Integer>> l2 = new ArrayList<ArrayList<Integer>>();
        
        int ligneComplete = 0;

        for (int i = 0 ; i < l.size() ; i++){
            if (l.get(i).size() > ligneComplete){
                ligneComplete = l.get(i).size();
            }
        }

        for (int i = 0 ; i < l.size() ; i++){
            if (l.get(i).size() == ligneComplete){
                l2.add(l.get(i));
            }
            else {
                ArrayList<Integer> temp = new ArrayList<Integer>();
                for (int j = 0 ; j <  ligneComplete - l.get(i).size()   ;j++){
                      temp.add(0);
                }
                for ( int  j = 0; j< l.get(i).size()  ; j++ ){
                    temp.add(l.get(i).get(j ));
                }
                l2.add(temp);

            }        
        }
        return l2; 
    }




    public static String[] lire (String s){
        String[] r = s.split("(?=\\p{Upper})");
        return r;
    }

    public static void aff(ArrayList<ArrayList<Integer>>l){
        for (ArrayList<Integer>i : l ){
            for (int e : i){
                System.out.print(e+ " ");
            }
            System.out.println();
        }

    }

    public static int versInt(String s) {
        int i = 0 ; 
        int ind = 0 ;
        for(String m : mois){
            if (m.equals(s)){
                ind = i;
            }
            else {
                i++;
            }
        }
    return ind;
    }



    public static String versMois(int x) {
        return  mois.get(x);
    }
    

    public static  ArrayList<ArrayList<Integer>> versTabInt (String[] s){
        int a = 0 ; 
        ArrayList<ArrayList<Integer>> l = new ArrayList<ArrayList<Integer>>();
                for (String e  : s){
                String[]temp = new String[e.length()];
                ArrayList<Integer> temp2  = new ArrayList<Integer>();
                temp = lire(e);
                for (String t : temp){
                    int tempInt = versInt(t);
                    temp2.add(tempInt);
                }
                l.add(temp2);
        }
            return l;
    }


    public static ArrayList<ArrayList<Integer>> renverse (ArrayList<ArrayList<Integer>>l){
        ArrayList<ArrayList<Integer>> l2 = new ArrayList<ArrayList<Integer>>();
        for (ArrayList<Integer> e : l){
            for (int i= 0; i < e.size()  ;i++){
                l2.add(l.get(e.size() - 1 - i));
            }
        }  
        
        return l2;
    }
        
    public static int sommel(ArrayList<Integer>l){
        int somme = 0 ; 
        for (int e : l){
            somme = somme + e ;
        }
        return somme ;
    }


    static  ArrayList<ArrayList<Integer>> formate(ArrayList<ArrayList<Integer>> table) {
        ArrayList<ArrayList<Integer>> ret = new ArrayList<ArrayList<Integer>>();
        final int N = table.get(0).size();
        for (int i = 0; i < N; i++) {
            ArrayList<Integer> col = new ArrayList<Integer>();
            for (ArrayList<Integer> row : table) {
                col.add(row.get(i));
            }
            ret.add(col);
        }
        Collections.reverse(ret);
        return ret;
    }

    public static ArrayList<Integer> addEnBase12 (ArrayList<ArrayList<Integer>>l){
        int a = 0;
        int reste =  0;
        ArrayList<Integer> s =  new ArrayList<Integer>() ;
            for (ArrayList<Integer> e : l){
                
                int somme = (reste  + sommel(e))%12;
                reste =  (reste  + sommel(e))/12;
                s.add(somme);

            }
        Collections.reverse(s);
        return s;
    }
    
    public static String rep (String[] l){
                ArrayList<Integer> l2 = addEnBase12(formate(matRect(versTabInt(l))));

        String r = "" ;
          if (l2.size() == 1){  r = r + versMois(l2.get(0));}
        else {
            if (l2.get(0) == 0 && (l2.get(1) != 0)){
                for (int i = 1 ; i< l2.size();i++ ){
                    r = r + versMois(l2.get(i));


            }
        }
        else {
                for (int i = 0 ; i< l2.size();i++ ){
                   r  = r + versMois(l2.get(i));
            }
        }
        }
        return r;
    }
        
        


    public static void main(String args[]) {
        //Scanner in = new Scanner(System.in);
        //int N = in.nextInt();
        //String[] l = new String [N];
        int N = 4 ;
        String[] l = {"JanJanSepOctDecNovFeb", "JulJunAugOctSep","JunJunMarJan","DecOctAugMay"};
    
      
        // Write an action using System.out.println()
        // To debug: System.err.println("Debug messages...");

        //String rep = "";
      
    System.out.print(rep(l));
    }
}
